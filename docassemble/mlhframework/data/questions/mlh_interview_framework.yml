---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - mlh_cover_sheet.yml
  - mlh_terms.yml
  - mlh_visual.yml
---
modules:
  - .al_courts_mi_edit
---
features:
  bootstrap theme: docassemble.mlhframework:custom_bootstrap.css
  css:
    - mlh_framework_theme.css
    - https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;family=Work+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap
  small screen navigation: False  # turn off nav panel on small screens
  progress bar: True
---
objects:
  - al_logo: DAStaticFile.using(filename="mlh_logo_M_only_40_px.png", alt_text="")
  - court_list: ALCourtLoader.using(file_name='michigan_court_info.xlsx')
  - image_case_number: |
      DAStaticFile.using(
        filename="case_number.jpg",
        alt_text=word("A court form. The case number, 01-234 DM, is circled in the top right"))
  - image_plaintiff_or_defendant: |
      DAStaticFile.using(
        filename="plaintiff_or_defendant.jpg",
        alt_text=word("The plaintiff and defendant's names are circled, partially down the first page. The plaintiff is on the left, and the defendant is on the right."))
---
code: |
  al_logo.alt_text = ""
---
code: |
  # These block defines Assembly Line-level variables and MLH Organization-level variables
  # that will most likely be consistent throughout the portfolio.
  AL_DEFAULT_COUNTRY = "US"   # default country and list of states in address fields
  AL_DEFAULT_STATE = "MI"     # default state in address fields
  AL_ORGANIZATION_HOMEPAGE = get_config('app homepage', 'https://michiganlegalhelp.org/')
  AL_ORGANIZATION_TITLE = "MLH-Forms"
  AL_DEFAULT_OVERFLOW_MESSAGE = " [PLEASE SEE ATTACHMENT.]"

  # The below variables can be used to quickly and consistently include common links and language.
  MLH_GUIDE = "[Guide to Legal Help](https://michiganlegalhelp.org/guide-to-legal-help)"
  MLH_GUIDE_FULL = f"You can use the {MLH_GUIDE} to search for a lawyer or legal services in your area."
  MLH_MiFILE = "[MiFILE](https://mifile.courts.michigan.gov)"
  MLH_CASE_TYPE_CODE_LIST = "[Case Type Code List](https://courts.michigan.gov/Administration/SCAO/Resources/Documents/standards/cf_casetypecodes.pdf)"

  # This will get the docassemble-level metadata short title
  MLH_interview_short_title = all_variables(special='metadata').get('short title')
  MLH_interview_title = all_variables(special='metadata').get('title')

  MLH_esign_tag = "(e-signed as allowed by MCR 1.109)"
---
#######
# These blocks contains MLH Organization-level variables that will vary from tool to tool.
# These are the organization defaults.
# Copy each block to an individual interview yml file and override as needed. 
code: |
  github_repo_name = "docassemble-General"  # default github repo
---
code: |
  MLH_instructions_included = True  # are instructions generated with the form(s)/letter(s)?
---
code: |
  MLH_multiple_forms = True         # does the tool produce multiple forms?
---
code: |
  MLH_court_forms = True             # Does this create forms to be filed with the court?
---
code: |
  MLH_esign_supported = True         # Are electronic signatures supported?
  MLH_esign = False                  # Add electronic signature?
---
code: |
  # See https://docs.google.com/spreadsheets/d/1dqrg1ojBMYWWZ_s2TTpc7mG0Gfo-leMQEo-1lDouxE4
  MLH_case_type_language = ""        # for e-filing help
---
code: |
  MLH_form_type = "form(s)"          # form / forms / letter (for use in intro/outro pages)
---
code: |
  MLH_time_min = 10
  MLH_time_max = 45
---
code: |
  MLH_materials_included = False      # include a list of needed info to complete the tool?
---
template: MLH_materials              # default list of needed info. Keep as bulleted list if replacing
content: |
  * Information about your legal issue
  * Information about the people involved
######
---
# docassemble-level metadata. To be overridden by individual tools.
# See https://docassemble.org/docs/initial.html
metadata:
  title: Do-It-Yourself Court Forms
  short title: DIY Court Forms

---
# Override what's in al_visual.yml
default screen parts:
  #back button label: Back
  #continue button label: Continue
  # BH: it appears that this cannot be set by set_parts(). Will need to default a value here
  # based on desired label, (i.e. "Back" or "Undo")
  #corner back button label: Back  
  
  exit link: exit                    # sets behavior of Exit buttons
  exit url: https://michiganlegalhelp.org
  # The below option customizes what's to the left of the menu / user's info 
  #navigation bar html: <li class="nav-item"><a class="nav-link" href="/some_link">Labell</a></li>

  #pre: This is the pre screen part.
  #submit: This is the submit screen part.
  # post: Provided by [Michigan Legal Help](https://michiganlegalhelp.org).
  right: |
    ✎ [Review / Edit Past Answers](${ url_action('review_full') })
  under: |
    % if not user_logged_in():
    [:key: Sign in](${url_of('login', next=interview_url())}) or [sign up](${url_of('register', next=interview_url())}) to save your progress.
    % endif
  footer: |
    [:share-alt-square: Share](${ url_ask([{'undefine': ['al_sharing_type','al_how_share_link']}, 'al_share_form_screen', {'recompute': ['al_did_share_form']}, 'al_share_results']) }){:target="_blank"}
    [:info-circle: About](${ url_action('about_this_interview') }){:target="_blank"}
    [:comment-dots: Feedback](${ feedback_link(user_info(), i="docassemble.mlhframework:mlh_feedback.yml", github_repo=github_repo_name) } ){:target="_blank"}
  #global footer: This is the footer part.
  #main page footer: This is the main footer.
  short logo: |
    <span class="title-container">
      <span class="al-logo">
        <img src="${ al_logo.url_for() }" alt="${ al_logo.alt_text }"/>
      </span>
      <span class="al-title-short">
        <span class="title-row-1">${ all_variables(special='metadata').get('short title','').rstrip() }</span>
      </span>
    </span>
  back button color: secondary
---
# To create consistent language on generic continue buttons. If it is ever decided to change
# that language, it only need to be done here.
# This is also useful for referring to a button label within page text. For example:
# “Just click the ${MLH_continue_button_label} button to save your progress.”
mandatory: true
code: |
  MLH_continue_button_label = "Continue"
  MLH_back_button_label = "Undo"

  set_parts(continue_button_label = MLH_continue_button_label, back_button_label = MLH_back_button_label)

# # # # # # # # # # # # # # # # Standard Intro Pages # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # Standard Intro Pages # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # Standard Intro Pages # # # # # # # # # # # # # # # #
---
# MLH standard intro pages
# Simply make a reference to the MLH_standard_intro_pages variable in an interview's
# main Interview Order block in order to bring in these standard intro pages. 
code: |
  MLH_intro_landing
  MLH_agree_terms
  MLH_intro_navigation
  MLH_intro_saving_answers
  MLH_intro_time
  if MLH_intro_agree_no_pii == False:
    MLH_intro_agree_no_pii_exit
  # This line exists so that these standard intro pages can be included from another
  # interview just by referencing this variable.
  MLH_standard_intro_pages = True

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# The blocks below are the standard intro pages for all MLH tools.
# Any of these pages can be overridden in an interview's custom yml file by creating a question
# block that uses the respective continue button field for its own continue button field.

---
# This is the very first screen for every single interview.
# The question text is very generic and should be overridden by each tool.
id: MLH intro landing FirstScreen
question: |
  ${ MLH_interview_short_title }
subquestion: |
  Welcome to the ${ MLH_interview_short_title } tool.

  This tool will help you prepare forms for your legal issue without a lawyer.
  
  If you have any questions or you aren't sure what to do, you may want to talk to a lawyer. ${ MLH_GUIDE_FULL }
continue button field: MLH_intro_landing
---
id: terms of use       # for now this is separate, but could incorporate in another intro page
question: |
  Terms of Use and Privacy Policy
fields:
  - note: |          
      Please review the Terms of Use:
      ${ display_template(MLH_terms_of_use, scrollable=True) } 
  - note: |         
      Please review the Privacy Policy:
      ${ display_template(MLH_privacy_policy, scrollable=True) } 
  - I accept the Terms of Use and Privacy Policy: acknowledged_information_use
    datatype: yesnowide
    grid: 8
continue button field: MLH_agree_terms
validation code: |
  if not acknowledged_information_use:
    validation_error("You must accept the Terms of Use and Privacy Policy to continue.", field="acknowledged_information_use")
---
id: MLH intro time
question: "Using this Tool"
subquestion: |
  It will probably take about **${ MLH_time_min } to ${ MLH_time_max } minutes** to answer all the questions.
  % if MLH_materials_included:
  
    To fill out your forms **you will need:**
    
    ${ MLH_materials }
  % endif
  
  Your personalized ${ MLH_form_type } will be ready after you answer all the questions. 
  % if MLH_instructions_included:
    You will also get instructions for what to do next with your ${ MLH_form_type }.
  % endif
continue button field: MLH_intro_time

---
id: MLH intro navigation
question: "Navigation"
subquestion: |
  If you make a mistake, you can use the **${ MLH_back_button_label }** button below to go back. You can also see and edit earlier answers by tapping the "✎ Review / Edit" link.

  Tap the {green words} in any screen for a definition or more information.

  You can also tap an underlined link with a green triangle next to it to see more information.

  ${ collapse_template(collapsible_info_template) }
terms:
  green words: |
    Green words are legal terms or a short way of referring to something that needs more explanation. The definition or explanation pops up when you tap the green words.
continue button field: MLH_intro_navigation
---
template: collapsible_info_template
subject: Tap here to see more information
content: |
  You can find more information or definitions by tapping on these links.
---
if: user_logged_in()
id: MLH intro saving answers logged in
question: |
  Your answers are saved as you go
subquestion: |
  You are already signed in; just tap the **${MLH_continue_button_label}** button to save your progress. You can come back later to finish or change your answers.
  
  To go back to saved answers, go to the menu at the top of the screen and select “My Forms.”
continue button field: MLH_intro_saving_answers
---
if: not user_logged_in()
id: MLH intro saving answers logged out
question: |
  Saving your answers
subquestion: |
  You can save your work at any time by signing in or signing up for an account. That way, you can come back later to finish or change your answers.

  Below the **Continue** button, tap "Sign in" if you have an account or "Sign up" to make one. You can also go to the
  % if device().is_mobile:
  :bars:
  % endif
  **menu at the top of the screen** and tap "Sign in or sign up to save answers".
  
  To go back to saved answers, make sure you are logged in. Then go to the menu at the top of the screen and select “My Forms.”
continue button field: MLH_intro_saving_answers
---
id: MLH intro PII
question: Private Information
subquestion: |
  To protect privacy, you **cannot** include personal identifying information in public court documents. Personal identifying information includes:
  
  * Date of birth
  * Social security or national identification number
  * Driver’s license or state identification number
  * Passport number
  * Financial account numbers

  **Don’t** put any personal identifying information in your answers **unless we specifically ask for it.** 
fields:
  - Do you understand that you should **not** enter personal identifying information **unless** this tool specifically asks for it?: MLH_intro_agree_no_pii
    label above field: True
    datatype: yesnoradio
  - note: |
      ${ collapse_template(PII_info_template) }
---
template: PII_info_template
subject: |
  What if personal identifying information is needed?
content: |
  If the judge needs any personal identifying information, this tool will:
  
  * specifically ask for it, and 
  * put the information on a special **non-public** court form for you to file.
---
id: Agree no PII exit
question: You cannot use this tool. 
subquestion: |
  You cannot continue with this tool unless you understand that you should not enter any personal identifying information that the tool does not specifically ask for.
  
  If you made a mistake, tap the **${ MLH_back_button_label }** button to change your answer. Otherwise, you can return to [Michigan Legal Help](https://michiganlegalhelp.org) for other legal information or resources.
event: MLH_intro_agree_no_pii_exit
# # # # # # # # # # # # # # # # Standard Outro Pages # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # Standard Outro Pages # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # Standard Outro Pages # # # # # # # # # # # # # # # #
---
# MLH standard outro pages
# Simply make a reference to the MLH_standard_outro_pages variable in an interview's
# main Interview Order block in order to bring in these standard outro pages. 
# Or, reference and/or override each block individually.
code: |
  if MLH_court_forms:
    MLH_outro_filing_information
  if MLH_esign_supported:
    MLH_esign
    if MLH_esign:
      signature_date
  MLH_outro_saving_answers
  MLH_standard_outro_pages = True

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# The blocks below are the standard outro pages for all MLH tools.
# Any of these pages can be overridden in an interview's custom yml file by creating a question
# block that uses the respective 'continue button field' for its own continue button field.

---
id: MLH outro filing information
question: |
  This website **does not file** your ${ MLH_form_type }.
subquestion: |
  **You need to file** your ${ MLH_form_type } at court in person, by mail, e-mail, or by e-filing. Contact your court to find out how you can file. 
  
  ${ collapse_template(efiling_info_template) }
  % if MLH_multiple_forms:
  
    This tool produces multiple forms for your case. On the download page at the end of this tool, **download and save all the forms**.
  % endif
  % if MLH_instructions_included:
  % if MLH_multiple_forms:
    Read the instructions that come with your forms for more information, including when to file each form.
  % else:
    Read the instructions that come with your forms for more information.
  % endif
  % endif
continue button field: MLH_outro_filing_information
progress: 97

---
template: efiling_info_template
subject: Can I e-file?
content: |
  Only some courts and case types allow e-filing using ${ MLH_MiFILE } or another e-filing system. 
  
  To find out if your court has e-filing, read the [What is E-Filing?](https://michiganlegalhelp.org/resources/mifile/what-e-filing) article.
  The article tells you how to find out which courts have e-filing and what kinds of cases those courts accept by e-filing.
  
  ${ MLH_case_type_language }

---
id: MLH outro electronic signature
question: |
  Add your electronic signature?
subquestion: |
  You can sign Michigan court forms electronically or by hand. The court will accept either type of signature.
fields:
  - Would you like to add your electronic signature to your forms now?: MLH_esign
    datatype: yesnoradio
    label above field: True
    help: |
      If you choose **Yes**, the forms will be signed "*/s/ ${users[0].name.full()}*" when you download them. 
under: |
  ${ collapse_template(signature_info_template) }
progress: 98
---
template: signature_info_template
subject: |
  I plan to **e-file**. What should I choose?
content: |
  If you **plan to e-file**, you may want to sign electronically. Choose *Yes* to add your electronic signature now.
  
  If you prefer to sign by hand, choose *No*. You will need to print your forms, sign them, and then scan them before you can e-file.
  
  If you're **not e-filing**, you can still add your electronic signature now if you wish.

  To find out **if you can e-file**, read [What is E-Filing?](https://michiganlegalhelp.org/resources/mifile/what-e-filing) The article tells you how to find out which courts have e-filing for which case types. 
  
  ${ MLH_case_type_language }
---
if: user_logged_in()
code: |
  MLH_outro_saving_answers = True
---
if: not user_logged_in()
id: MLH outro saving answers logged out
question: |
  Saving your answers
subquestion: |
  You can save your answers so that you can come back to this tool later. This will allow you to make changes to your ${ MLH_form_type } without starting over.

  Below the **Continue** button, tap "Sign in" if you have an account or "Sign up" to make one. You can also go to the
  % if device().is_mobile:
  :bars:
  % endif
  menu at the top of the screen and tap "Sign in or sign up to save answers".

  To go back to saved answers, make sure you are logged in. Then go to the menu at the top of the screen and select “My Forms.”
continue button field: MLH_outro_saving_answers
progress: 99

# # # # # # # # # # # # # # Court Loader - Begin # # # # # # # # # # # # # #
# # # # # # # # # # # # # # Court Loader - Begin # # # # # # # # # # # # # #
# # # # # # # # # # # # # # Court Loader - Begin # # # # # # # # # # # # # #
---
code: |
  # al_form_type = "appeal" 
  # leave this in & choose type to test in this interview, comment out to pull into other interviews
---
id: Choose a court
question: |
  % if al_form_type == 'starts_case':
  What county do you want to file in?
  % elif al_form_type == 'appeal':
  What is the county of the trial court your case was originally filed in?
  % else:
  Choose the county of the court where your case is
  % endif
subquestion: |
  % if al_form_type != 'starts_case':
  ${ collapse_template(help_user_choose_court_template) }
  % endif
fields:
  - County: county_choice
    code: court_list._load_courts()["address_county"].unique()
---
template: help_user_choose_court_template
subject: |
  How do I know?
content: |
  You can find the case number, county and court by looking at the top of court papers from your case such as the summons, complaint, petition, or answer in your case. 
---
question: |
  % if al_form_type == 'starts_case':
  What court do you want to file in?
  % elif al_form_type == 'appeal':
  What trial court was your case originally filed in?
  % else:
  Please choose the court where your case is.
  % endif
subquestion: |
  % if al_form_type != 'starts_case':
  ${ collapse_template(help_user_choose_court_template) }
  % endif
fields:
  - Court: court_index
    # below filters only by county. All possible courts will come up.
    # code: court_list.filter_courts([county_choice], column='address_county') 
    # below filters by county & type. Only shows district & circ courts.
    code: court_list.filter_courts_by_2([county_choice], ['district', 'circuit'], column_1='address_county', column_2='type')
---
code: |
  the_court = court_list.as_court('the_court',court_index)
---
 # Change this to True to test in this interview.
question: |
  Display court info
subquestion: |
  court_index: ${ court_index }
  
  ${ the_court } - ${ county_choice } County
  
  ${ the_court.address.block(bare=True) }
  
  ${ the_court.phone }
  
  % if defined('the_court.description'):
  ${ the_court.description }
  % else:
  % endif  
# adding (bare=True) strips out unit formatting that messed with PO Boxes
# ${ map_of(the_court) }
# getting errors when latitude and longitude are empty, so commenting this out for now
continue button field: court_info_display

---
id: court type choice
mandatory: False
question: |
  % if al_form_type == 'appeal':
  What court your case was originally filed in?
  % else:
  What court is this case in?
  % endif
subquestion: |
  ${ collapse_template(court_type_selection_template) }
fields:
  - Court: court_type
    choices:
      - Circuit: circuit
      - District: district
      - Probate: probate
continue button field: court_type_selection
---
template: court_type_selection_template
subject: |
  What is this?
content: |
  A civil case is filed because of a disagreement between two people, businesses, or organizations. The disagreement usually involves one person believing that he or she has been hurt, had rights violated, or had property damaged by another person. A civil case is not a criminal case.

  **District Court** is where general civil cases are heard if the amount of money in dispute is less than or equal to $25,000.

  **Circuit Court** is where general civil cases are heard if the amount in dispute is more than $25,000.

  **Probate Court** handles things like wills and estate administration, guardianships and conservatorships, adoptions, and registering foreign birth certificates.

  The title of a probate case is often "In the matter of…"

---
id: county court choice
question: Which ${ capitalize(court_type) } Court in ${ county_choice } County is this case in?
fields:
  - Select a Court: court_index_for_specific_court_type
    code: court_list.filter_courts_by_2([county_choice], [court_type], column_1='address_county', column_2='type')

---
# Gets the count of the specified [court_type] courts for [county_choice] County
# For example, as of Feb 2024, filter_courts_by_2('Kent', 'district') will return 6
code: |
  court_count = len(list(court_list.filter_courts_by_2([county_choice], [court_type], column_1='address_county', column_2='type')))

# # # # # # # # # # # # # # # Court Loader - End # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # Court Loader - End # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # Court Loader - End # # # # # # # # # # # # # # #
---
comment: |
  Overridden from `al_visual.yml` to turn off sms
code: |
  if al_how_share_link == 'email':
    if al_sharing_type == "tell_friend":
      success = send_email(to=share_interview_contact_method, template=al_tell_a_friend_message_template)
    else:
      success = send_email(to=share_interview_contact_method, template=al_share_answers_message_template)
  al_did_share_form = True
---
continue button field: al_share_form_screen
id: al share form screen
question: |
  Share this website
fields:
  - What do you want to do?: al_sharing_type
    datatype: radio
    choices:
      - Tell a friend about this website: tell_friend
        default: True
#       - Share my answers and progress with someone: share_answers
  - How do you want to share the link?: al_how_share_link
    datatype: radio
    choices:
      - Email: email
      - Just show me the link. I will share it myself.: link_only
    js show if: |
      val("al_sharing_type") === "tell_friend" || val("al_sharing_type") === "share_answers" 
  - note: |
      **Note**: the person you share this link with will be able to **see and
      edit** your answers on this form.
    js show if: |
      val("al_sharing_type") === "share_answers" &&  ( val("al_how_share_link") === "email" || val("al_how_share_link") === "link_only" )
  - note: |
      You can copy and share this link
      
      ${ copy_button_html(  interview_url(i=user_info().filename, style="short", new_session=1), label=al_copy_button_label.show(), tooltip_inert_text=al_copy_button_tooltip_inert_text.show(), tooltip_copied_text = al_copy_button_tooltip_copied_text.show() ) }
    js show if: |
      val("al_sharing_type") === "tell_friend" && val("al_how_share_link") === "link_only"      
  - note: |
      You can copy and share this link (expires in 48 hours)
      ${ copy_button_html( interview_url(temporary=48), label=al_copy_button_label.show(), tooltip_inert_text=al_copy_button_tooltip_inert_text.show(), tooltip_copied_text = al_copy_button_tooltip_copied_text.show()) }
    js show if: |
      val("al_sharing_type") === "share_answers" && val("al_how_share_link") === "link_only"
  - Email you want to send this to: share_interview_contact_method
    validate: |
        lambda text: re.match("\S+@\S+", text)
    show if:
      variable: al_how_share_link
      is: email
  - Message: tell_a_friend_message
    datatype: area
    default: |
      Hi, I wanted to let you know about a free website that I learned about:
      "${single_paragraph(all_variables(special='metadata').get('title', AL_ORGANIZATION_TITLE))}". I think this might
      help you, too. Check it out at the link in this message:       
    js show if: |
      val("al_how_share_link") === "email" && val("al_sharing_type") === "tell_friend"
  - Message: share_interview_answers_message
    datatype: area
    default: |
      Hi, I wanted to share my progress on a form on Michigan Legal Help.
      If you tap this link, you can follow along or finish the form for me.
    js show if: |
      val("al_how_share_link") === "email" && val("al_sharing_type") === "share_answers"      
  - Your name: al_share_form_from_name
    default: ${ str(users[0]) if defined('users[0].name.first') else '' } 
    show if:
      variable: al_how_share_link
      is: email
back button label: |
  Back to your form
---
#### Overrides templates so they maintain newlines
template: al_share_answers_message_template
subject: |
  ${ AL_ORGANIZATION_TITLE } from ${ al_share_form_from_name }
content: |
  ${ share_interview_answers_message.replace("\n", "<br>") }
  Tap the link below to view and edit ${ al_share_form_from_name }'s
  progress so far:
  
  ${ interview_url(temporary=48) }
---
template: al_tell_a_friend_message_template
subject: |
  ${ al_share_form_from_name } wants to tell you about ${ AL_ORGANIZATION_TITLE }
content: |
  ${ tell_a_friend_message.replace("\n", "<br>") }
  ${ interview_url(i=user_info().filename, style="short", new_session=1) }
---
comment: |
  Overrides About page from `al_visual.yml`
template: about_this_interview_version_info
content: |
  % if all_variables(special='metadata').get('help_page_title','').rstrip() and all_variables(special='metadata').get('help_page_url','').rstrip():
  To learn more about this legal topic, go to: [${ all_variables(special='metadata').get('help_page_title','').rstrip() }](${ all_variables(special='metadata').get('help_page_url','').rstrip() }).
  % endif

  % if interview_metadata.get("main_interview_key"):
    <%
      MAIN_METADATA = interview_metadata[interview_metadata["main_interview_key"]]
    %>
  % elif len(interview_metadata) > 1:    
    <% 
      del(interview_metadata["main_interview_key"]) # DADict creates the key on lookup above
      MAIN_METADATA = next(iter(interview_metadata.values())) 
    %>
  % else:
    <% MAIN_METADATA = all_variables(special='metadata') %>
  % endif
  <% ORIGINAL_FORMS = MAIN_METADATA.get("original_form", []) if isinstance(MAIN_METADATA.get("original_form"), list) else ([MAIN_METADATA.get("original_form", "")] if MAIN_METADATA.get("original_form") else []) %>

  % if len(ORIGINAL_FORMS) > 1:
  View the original version of this form at the links below:

  % for url in [url for url in ORIGINAL_FORMS if url.strip() != "None" and url.startswith("http")]:
  * [${ url }](${ url })
  % endfor
  % elif len(ORIGINAL_FORMS) == 1:
  [View the original version of this form](${ ORIGINAL_FORMS[0] }).
  % endif
  
  % if all_variables(special='metadata').get('authors'):
  Michigan Legal Help made this free tool. Main author(s): ${ comma_and_list(all_variables(special='metadata').get('authors')) }. This tool uses code from the Document Assembly Line Project. 
  % endif
  
  % if package_updated_on:
    **Version Information:** "${all_variables(special='metadata').get('title','').rstrip()}" version `${ package_version_number }`; AssemblyLine version `${ al_version }`. Last updated on ${ package_updated_on }. [:fab-fa-github: View code on GitHub](${ github_url }).  
  % else:
    **Version Information:** "${all_variables(special='metadata').get('title','').rstrip()}" version `${ package_version_number }`; AssemblyLine version `${ al_version }`.
  % endif
---
#######################
sets:
  - x.address.address
  - x.address.city
  - x.address.zip
  - x.address.unit
  - x.address.state
  - x.address.country
id: persons address
generic object: ALIndividual
question: |
  What is ${ x.possessive('address') }?
fields:
  - code: |
      x.address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=True)
---
id: your address
sets:
  - users[0].address.address
  - users[0].address.city
  - users[0].address.zip
  - users[0].address.unit
  - users[0].address.state
  - users[0].address.country
question: |
  What is your address?
subquestion: |
  Use an address where you can be contacted.
fields:
  - code: |
      users[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=True)
---
id: user i's address
sets:
   - users[i].address.address
   - users[i].address.city
   - users[i].address.zip
   - users[i].address.unit
   - users[i].address.state
   - users[i].address.country
question: |
  What is ${ users[i] }'s address?
fields:
  - Same as your address: users[i].address
    datatype: object_radio
    choices:
      - users[0].address if defined("users[0].address.address") else None
    object labeler: |
      lambda y: y.on_one_line()
    none of the above: |
      Somewhere else
    disable others: True
    show if:
      code: |
        defined("users[0].address.address")
  - code: |
      users[i].address.address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=True)
---
generic object: ALAddress
template: x.address_label
content: |
  Street Address or PO Box
---
generic object: ALAddress
template: x.unit_label
content: |
  Apartment, suite, etc
---
generic object: ALAddress
template: x.state_or_province_label
content: |
  State or Province
---
generic object: ALAddress
template: x.postal_code_label
content: |
  Zip or Postal Code
---
id: persons contact information
generic object: ALIndividual
question: |
  What is ${x}'s phone number?
fields:
  - Phone: x.phone_number
    show if:
      variable: x.no_phone_number
      is: False
  - ${ x } does not have a phone or I don't know their number.: x.no_phone_number
    required: False
    datatype: yesno
---
id: your contact information
question: |
  What is your phone number?
subquestion: |
  Court staff may need to call you about your case. It's important to give a phone number if possible.

  ${ collapse_template(what_if_no_number_template) }
fields:
  - Phone number: users[0].phone_number
    show if:
      variable: users[0].no_phone_number
      is: False
  - There's NO reliable way to contact me by phone.: users[0].no_phone_number
    required: False
    datatype: yesno
  - note: |
      ${ if_check_no_phone_template.content }
    show if: users[0].no_phone_number
---
template: what_if_no_number_template
subject: What if I don't have a phone?
content: |
  You can enter someone else's number as long as they can safely pass on messages to you. Tell this person that you are using their number on your court forms. 

  If you don't have a phone **and** nobody can safely pass messages to you, check the checkbox below.
---
template: if_check_no_phone_template
subject: What if I don't have a phone?
content: |
  If someone can safely pass messages on to you, **uncheck** the statement above and enter their phone number. Tell this person that you are using their number on your court forms. 
---
generic object: ALIndividual
code: |
  if x.no_phone_number:
    x.phone_number = "Unknown phone"
---
code: |
  if users[0].no_phone_number:
    users[0].phone_number = "Does not have phone"
---
id: docket number
question: |
  What is your case number?
subquestion: |
  Enter the case number from your existing case.

  ${ collapse_template(where_case_number) }
fields:
  - Case number: docket_number
    maxlength: 25
---
template: where_case_number
subject: |
  Where can I find the case number?
content: |
  The case number is usually on the top right of your court forms. Below is an image where you can find this info.

  ${ image_case_number.show(width="100%") }
  
---
sets:
  - users[i].has_attorney
id: user has attorney
question: |
  Do you have a lawyer?
subquestion: |
fields:
  - no label: users[i].has_attorney
    input type: radio
    choices:
      - Yes: True
      - No: False
---
sets:
  - x.has_attorney
id: person has attorney
generic object: ALIndividual
question: |
  Does ${ x } have a lawyer?
subquestion: |
  ${ collapse_template(person_lawyer_template) }
fields:
  - no label: x.has_attorney
    input type: radio
    choices:
      - Yes: True
      - No: False
---
template: person_lawyer_template
subject: |
  What if I don't know?
content: |
  Look at the first page of an existing court document, like a complaint, petition, or answer. The top of the first page is the “caption” which has the basic case information. If ${ x } has a lawyer, that information might be found here.
  
  You can also check the signature area of any court documents that you received.
  
  Answer “No” if there's no lawyer mentioned on any documents and you haven't seen or heard about a lawyer.
---
sets:
  - x[i].name.first
  - x[i].name.last
  - x[i].name.middle
  - x[i].name.suffix
  - x[i].bar_number
id: lawyer name and bar
generic object: ALPeopleList
question: |
  What is the lawyer's name and bar number?
subquestion:
  ${ collapse_template(help_user_find_bar_number_template) }
fields:
  - code: |
      x[i].name_fields()
  - label: |
      Bar number
      (include the 'P')
    field: x[i].bar_number
    required: False
---
template: help_user_find_bar_number_template
subject: |
  How can I find a lawyer's bar number?
content: |
  The lawyer's bar number is a five digit number after the letter P, usually listed 
  after the lawyer's name. For example: P12345.  
---
template: help_user_ask_role_template    # must edit/replace this if other roles apply
subject: |
  How do I know?
content: |
  You can find the parties by looking at the first page of an existing court document, like a complaint, petition, or answer. The top of the first page is the “caption” which has the basic case information. This area will list all of the parties in the case with their titles.

  ${ image_plaintiff_or_defendant.show(width="100%") }

  If you were the first person to file a form to start this case, you are the Plaintiff. If someone else started this case by filing in court, you are the Defendant.
---